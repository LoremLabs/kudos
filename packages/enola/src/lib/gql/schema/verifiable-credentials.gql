type Issuer {
  id: ID!
  ethereumAddress: [Byte!] # address
}

type CredentialSubject {
  id: ID!
  ethereumAddress: [Byte!] # address
  _type: String
  typeSchema: String
  value: String
  encrypted: String
  trust: Int!
  stake: BigInt!
  price: BigInt!
  nbf: BigInt!
  exp: BigInt!
}

type CredentialSchema {
  id: ID!
  _type: String
}

type VerifiableCredential {
  id: ID!
  claimId: String
  _context: String
  _type: String
  credentialSubjectDID: String
  credentialSubjectAddress: [Byte!]
  issuer: Issuer!
  credentialSubject: CredentialSubject!
  credentialSchema: CredentialSchema!
  issuanceDate: String
  expirationDate: String
  credentialStatus: String
  transaction: String
  reason: String
  disputedBy: String
  account: Account!
}

type CredentialRegistry {
  id: ID!
  dayUpdated: String
  balance: BigInt!
  staked: BigInt!
  issued: BigInt!
  revoked: BigInt!
  deleted: BigInt!
  suspended: BigInt!
  disputed: BigInt!
  expired: BigInt!
}